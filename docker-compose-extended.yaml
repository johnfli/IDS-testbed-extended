version: '3.7'
services:

  omejdn:
    image: nginx:1.21.6
    container_name: omejdn
    restart: always
    ports:
      - 80:80
    environment:
      - OMEJDN_DOMAIN=${OMEJDN_DOMAIN}
      - OMEJDN_PATH=${OMEJDN_PATH}
      - UI_PATH=${UI_PATH}
    volumes:
      - ./DAPS/nginx.conf:/etc/nginx/templates/default.conf.template
    networks:
      - local

  omejdn-server:
    image: ghcr.io/fraunhofer-aisec/omejdn-server:${OMEJDN_VERSION}
    container_name: omejdn-server
    restart: always
    environment:
      - OMEJDN_ISSUER=${OMEJDN_ISSUER}
      - OMEJDN_FRONT_URL=${OMEJDN_ISSUER}
      - OMEJDN_OPENID=true
      - OMEJDN_ENVIRONMENT=${OMEJDN_ENVIRONMENT}
      - OMEJDN_ACCEPT_AUDIENCE=idsc:IDS_CONNECTORS_ALL
      - OMEJDN_DEFAULT_AUDIENCE=idsc:IDS_CONNECTORS_ALL
      - OMEJDN_ADMIN=${ADMIN_USERNAME}:${ADMIN_PASSWORD}
    volumes:
      - ./DAPS/config:/opt/config
      - ./DAPS/keys:/opt/keys
    networks:
      - local

  omejdn-ui:
    image: ghcr.io/fraunhofer-aisec/omejdn-ui:${UI_VERSION}
    container_name: omejdn-ui
    restart: always
    environment:
      - OIDC_ISSUER=${OMEJDN_ISSUER}
      - API_URL=${OMEJDN_ISSUER}/api/v1
      - CLIENT_ID=adminUI
    networks:
      - local

  connectora:
    image: ghcr.io/international-data-spaces-association/dataspace-connector:7.1.0
    container_name: connectora
    restart: always
    ports:
      - 9080:8080
    networks:
      - local
    volumes:
      - ./DataspaceConnectorA/conf/config.json:/config/config.json
      - ./DataspaceConnectorA/conf/testbed1.p12:/conf/testbed1.p12
      - ./DataspaceConnectorA/conf/connectorA.p12:/config/connectorA.p12
      - ./DataspaceConnectorA/conf/truststore.p12:/config/truststore.p12
    environment:
      - CONFIGURATION_PATH=/config/config.json
      - DAPS_URL=http://omejdn
      - DAPS_TOKEN_URL=http://omejdn/auth/token
      - DAPS_KEY_URL=http://omejdn/auth/jwks.json
      - DAPS_INCOMING_DAT_DEFAULT_WELLKNOWN=/jwks.json
      - SERVER_SSL_KEY-STORE=file:///config/connectorA.p12
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dataspace-connector-a-postgres:5432/connectordb
      - SPRING_DATASOURCE_USERNAME=connector
      - SPRING_DATASOURCE_PASSWORD=12345
      - SPRING_DATASOURCE_PLATFORM=postgres
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - dataspace-connector-a-postgres

  dataspace-connector-a-postgres:
    image: postgres:13
    container_name: 'dataspace-connector-a-postgres'
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=connector
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=connectordb
    networks:
      - local
    volumes:
      - connector-a-data:/var/lib/postgresql/data

  dataspace-connector-a-ui:
    image: registry.hub.docker.com/johnfli/dataspace-connector-a-ui:1.0
    container_name: dataspace-connector-a-ui
    restart: always
    environment:
      - CONNECTOR_URL=https://connectora:8080
      - CONNECTOR_USER=admin
      - CONNECTOR_PASSWORD=password
    ports:
      - 9090:8083
    networks:
      - local

  connectorb:
    image: ghcr.io/international-data-spaces-association/dataspace-connector:7.1.0
    container_name: connectorb
    restart: always
    ports:
      - 9081:8081
    networks:
      - local
    volumes:
      - ./DataspaceConnectorB/conf/config.json:/config/config.json
      - ./DataspaceConnectorB/conf/testbed2.p12:/conf/testbed2.p12
      - ./DataspaceConnectorB/conf/connectorB.p12:/config/connectorB.p12
      - ./DataspaceConnectorB/conf/truststore.p12:/config/truststore.p12
    environment:
      - CONFIGURATION_PATH=/config/config.json
      - SERVER_PORT=8081
      - DAPS_URL=http://omejdn
      - DAPS_TOKEN_URL=http://omejdn/auth/token
      - DAPS_KEY_URL=http://omejdn/auth/jwks.json
      - DAPS_INCOMING_DAT_DEFAULT_WELLKNOWN=/jwks.json
      - SERVER_SSL_KEY-STORE=file:///config/connectorB.p12
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dataspace-connector-b-postgres:5432/connectordb
      - SPRING_DATASOURCE_USERNAME=connector
      - SPRING_DATASOURCE_PASSWORD=12345
      - SPRING_DATASOURCE_PLATFORM=postgres
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - dataspace-connector-a-postgres

  dataspace-connector-b-postgres:
    image: postgres:13
    container_name: 'dataspace-connector-b-postgres'
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=connector
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=connectordb
    networks:
      - local
    volumes:
      - connector-b-data:/var/lib/postgresql/data

  dataspace-connector-b-ui:
    image: 'registry.hub.docker.com/johnfli/dataspace-connector-b-ui:1.0'
    container_name: dataspace-connector-b-ui
    restart: always
    environment:
      - CONNECTOR_URL=https://connectorb:8081
      - CONNECTOR_USER=admin
      - CONNECTOR_PASSWORD=password
    ports:
      - 9091:8083
    networks:
      - local

  broker-reverseproxy:
    image: registry.gitlab.cc-asp.fraunhofer.de/eis-ids/broker-open/reverseproxy
    container_name: broker-reverseproxy
    restart: always
    volumes:
      - ./MetadataBroker/server.crt:/etc/cert/server.crt
      - ./MetadataBroker/server.key:/etc/cert/server.key
    ports:
      - "443:443" # IDS-HTTP API
      - "81:80"
    networks:
      - local

  broker-core:
    image: broker-core-testbed:4.2.8
    container_name: broker-core
    restart: always
    build:
      context: ./MetadataBroker/build
    environment:
      - SPARQL_ENDPOINT=http://broker-fuseki:3030/connectorData
      - ELASTICSEARCH_HOSTNAME=broker-elasticsearch
      - SHACL_VALIDATION=true
      - DAPS_VALIDATE_INCOMING=true
      - COMPONENT_URI=https://localhost/
      - COMPONENT_CATALOGURI=https://localhost/connectors/
      - DAPS_URL=http://omejdn/auth/token
    ports:
      - "8080:8080"
    depends_on:
      - "broker-elasticsearch"
      - "broker-fuseki"
    networks:
      - local

  broker-fuseki:
    image: registry.gitlab.cc-asp.fraunhofer.de/eis-ids/broker-open/fuseki
    container_name: broker-fuseki
    restart: always
    environment:
      - ADMIN_PASSWORD=test
    ports:
      - "3030:3030"
    volumes:
      - broker-fuseki:/fuseki
    networks:
      - local

  broker-elasticsearch:
    image: elasticsearch:7.9.3
    container_name: broker-elasticsearch
    restart: always
    environment:
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:3000
      - http.cors.allow-headers=*
      - http.cors.allow-credentials=true
      - discovery.type=single-node
    volumes:
      - broker-esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - local

  broker-frontend:
    image: registry.hub.docker.com/johnfli/ids-broker-searchfrontend:1.0
    container_name: broker-frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - local

  mongodb:
    image: mongo:4.4.6
    container_name: mongo
    restart: always
    volumes:
      - db:/data/db
    expose:
      - "27017"
    networks:
      - local

  mongodb-handler:
    image: registry.gitlab.cc-asp.fraunhofer.de/eis-ids/broker/mongodb-handler
    container_name: mongodb-handler
    restart: always
    ports:
      - "4000:4000"
    environment:
      - MONGODB_ENDPOINT=mongodb://mongodb:27017/users
      - JWT_SECRET=somethingsecret
      - ADMIN_PASSWORD=admin
      - BROKER_URL=http://broker-core:8080
    depends_on:
      - "mongodb"
    networks:
      - local

volumes:
  broker-fuseki: {}
  broker-esdata: {}
  db: {}
  connector-a-data: {}
  connector-b-data: {}

networks:
  local:
    driver: bridge
